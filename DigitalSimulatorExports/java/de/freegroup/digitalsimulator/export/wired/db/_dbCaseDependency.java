package de.freegroup.digitalsimulator.export.wired.db;

/**
 * Class generated by automatic ClassGenerator
 * Date: Mon Feb 02 16:30:54 CET 2004
 */
import de.freegroup.digitalsimulator.db.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.sql.*;
import de.freegroup.digitalsimulator.Trace;

class _dbCaseDependency extends dbObject 
{

	String    object_id;	// Foreign Key pointing to Table [ElectricObject], Field [id]
	String    electricCase_id;	// Foreign Key pointing to Table [ElectricCase], Field [id]
	String    id;	// Key


	/**
	 * destroy a object in the database
	 */
	public boolean destroy()
	{
		boolean result = false;
		String    _key   = id;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.destroyInstance");
			try
			{
					stmt.executeUpdate( "DELETE FROM CaseDependency WHERE id='"+_key+"'");
					result = true;
					id     = null;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}



	/**
	 * Method:      getId()
	 * Description: 
	 * Returns:     String
	 */
	public String getId()
	{
		return id;
	}

	/**
	 * Method:      getObject()
	 * Description: 
	 * Returns:     ElectricObject
	 */
	public ElectricObject getObject()
	{
		return ElectricObject.findById(object_id);
	}

	/**
	 * Method:      setObject()
	 * Description: 
	 * Returns:     void
	 */
	public void setObject(ElectricObject _foreigner, boolean _autocommit)
	{
		object_id= _foreigner.getId();
		if (_autocommit == true)
			commit();
	}

	/**
	 * Method:      getElectricCase()
	 * Description: 
	 * Returns:     ElectricCase
	 */
	public ElectricCase getElectricCase()
	{
		return ElectricCase.findById(electricCase_id);
	}

	/**
	 * Method:      setElectricCase()
	 * Description: 
	 * Returns:     void
	 */
	public void setElectricCase(ElectricCase _foreigner, boolean _autocommit)
	{
		electricCase_id= _foreigner.getId();
		if (_autocommit == true)
			commit();
	}

	/**
	 *  Method:      getDependencyPins()
	 *  Description:                              
	 *  Returns:     ArrayList<DependencyPin>
	 */
	public ArrayList getDependencyPins()
	{
		return _dbDependencyPin.findByCaseDependency(this);
	}


	/**
	 *  Method:      findByObject(_dbElectricObject _object)
	 *  Description: 
	 *  Returns:     ArrayList<CaseDependency>
	 */
	public static ArrayList findByObject(_dbElectricObject _object)
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.findByObject");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT object_id, electricCase_id, id FROM CaseDependency WHERE object_id='"+toSQL(((_object==null)?"":_object.getId()))+"'");
				while(s.next())
				{
					CaseDependency newObject = new CaseDependency();
					newObject.object_id=s.getString(1);
					newObject.electricCase_id=s.getString(2);
					newObject.id=s.getString(3);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 *  Method:      findByElectricCase(_dbElectricCase _electricCase)
	 *  Description: 
	 *  Returns:     ArrayList<CaseDependency>
	 */
	public static ArrayList findByElectricCase(_dbElectricCase _electricCase)
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.findByElectricCase");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT object_id, electricCase_id, id FROM CaseDependency WHERE electricCase_id='"+toSQL(((_electricCase==null)?"":_electricCase.getId()))+"'");
				while(s.next())
				{
					CaseDependency newObject = new CaseDependency();
					newObject.object_id=s.getString(1);
					newObject.electricCase_id=s.getString(2);
					newObject.id=s.getString(3);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 *  Method:      findById(String _id)
	 *  Description: 
	 *  Returns:     CaseDependency
	 */
	public static CaseDependency findById(String _id)
	{
		CaseDependency result = null;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.findById");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT object_id, electricCase_id, id FROM CaseDependency WHERE id='"+toSQL(_id)+"'");
				if(s.next())
				{
					result = new CaseDependency();
					result.object_id= s.getString(1);
					result.electricCase_id= s.getString(2);
					result.id= s.getString(3);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 * returns boolean
	 */
	public boolean commit()
	{
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.commit");
			try
			{
				stmt.executeUpdate( "UPDATE CaseDependency set object_id= '"+toSQL(object_id)+"', electricCase_id= '"+toSQL(electricCase_id)+"' WHERE id='"+id+"'");
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return true;
	}


	/**
	 * returns ArrayList<CaseDependency>
	 */
	public static ArrayList getAll()
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.getAll");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT object_id, electricCase_id, id FROM CaseDependency");
				while(s.next())
				{
					CaseDependency newObject = new CaseDependency();
					newObject.object_id=s.getString(1);
					newObject.electricCase_id=s.getString(2);
					newObject.id=s.getString(3);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 * create a new object in the database
	 */
	static public CaseDependency createInstance( _dbElectricObject _object, _dbElectricCase _electricCase )
	{
		CaseDependency result = null;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.createInstance");
			try
			{
				String nextGUID = new java.rmi.server.UID().toString();
				stmt.executeUpdate( "INSERT INTO CaseDependency ( object_id, electricCase_id, id) VALUES ( '"+((_object==null)?"":_object.getId())+"',  '"+((_electricCase==null)?"":_electricCase.getId())+"', '"+nextGUID+"')");
				result = new CaseDependency();
				result.object_id= (_object==null)?"":_object.getId();
				result.electricCase_id= (_electricCase==null)?"":_electricCase.getId();
				result.id= nextGUID;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 * create a new object in the database
	 */
	static public void newInstance( _dbElectricObject _object, _dbElectricCase _electricCase )
	{
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.newInstance");
			try
			{
				String nextGUID = new java.rmi.server.UID().toString();
				stmt.executeUpdate( "INSERT INTO CaseDependency ( object_id, electricCase_id, id) VALUES ( '"+((_object==null)?"":_object.getId())+"',  '"+((_electricCase==null)?"":_electricCase.getId())+"', '"+nextGUID+"')");
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
	}


	/**
	 * destroy a object in the database
	 */
	static public boolean destroyInstance( String  _key)
	{
		boolean result = false;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.destroyInstance");
			try
			{
					stmt.executeUpdate( "DELETE FROM CaseDependency WHERE id='"+_key+"'");
					result = true;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 * destroy ALL objects in the database
	 */
	static public boolean destroyAll()
	{
		boolean result = false;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbCaseDependency.destroyAll");
			try
			{
					stmt.executeUpdate("DELETE from CaseDependency" );
					result = true;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 */
	public String toString()
	{
		StringBuffer result = new StringBuffer(1024);
		result.append(object_id);
		result.append("|");
		result.append(electricCase_id);
		result.append("|");
		result.append(id);
		return result.toString();
	}


	/**
	 * init the class
	 */
	static
	{
	}


}
