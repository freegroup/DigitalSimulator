package de.freegroup.digitalsimulator.export.wired.db;

/**
 * Class generated by automatic ClassGenerator
 * Date: Mon Feb 02 16:30:54 CET 2004
 */
import de.freegroup.digitalsimulator.db.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.sql.*;
import de.freegroup.digitalsimulator.Trace;

class _dbObjectPin2CasePin extends dbObject 
{

	String    objectPin_id;	// Foreign Key pointing to Table [ObjectPin], Field [id]
	String    casePin_id;	// Foreign Key pointing to Table [CasePin], Field [id]
	String    object2Case_id;	// Foreign Key pointing to Table [Object2Case], Field [id]
	String    id;	// Key


	/**
	 * destroy a object in the database
	 */
	public boolean destroy()
	{
		boolean result = false;
		String    _key   = id;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.destroyInstance");
			try
			{
					stmt.executeUpdate( "DELETE FROM ObjectPin2CasePin WHERE id='"+_key+"'");
					result = true;
					id     = null;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}



	/**
	 * Method:      getId()
	 * Description: 
	 * Returns:     String
	 */
	public String getId()
	{
		return id;
	}

	/**
	 * Method:      getObjectPin()
	 * Description: 
	 * Returns:     ObjectPin
	 */
	public ObjectPin getObjectPin()
	{
		return ObjectPin.findById(objectPin_id);
	}

	/**
	 * Method:      setObjectPin()
	 * Description: 
	 * Returns:     void
	 */
	public void setObjectPin(ObjectPin _foreigner, boolean _autocommit)
	{
		objectPin_id= _foreigner.getId();
		if (_autocommit == true)
			commit();
	}

	/**
	 * Method:      getCasePin()
	 * Description: 
	 * Returns:     CasePin
	 */
	public CasePin getCasePin()
	{
		return CasePin.findById(casePin_id);
	}

	/**
	 * Method:      setCasePin()
	 * Description: 
	 * Returns:     void
	 */
	public void setCasePin(CasePin _foreigner, boolean _autocommit)
	{
		casePin_id= _foreigner.getId();
		if (_autocommit == true)
			commit();
	}

	/**
	 * Method:      getObject2Case()
	 * Description: 
	 * Returns:     Object2Case
	 */
	public Object2Case getObject2Case()
	{
		return Object2Case.findById(object2Case_id);
	}

	/**
	 * Method:      setObject2Case()
	 * Description: 
	 * Returns:     void
	 */
	public void setObject2Case(Object2Case _foreigner, boolean _autocommit)
	{
		object2Case_id= _foreigner.getId();
		if (_autocommit == true)
			commit();
	}

	/**
	 *  Method:      getDependencyPins()
	 *  Description:                              
	 *  Returns:     ArrayList<DependencyPin>
	 */
	public ArrayList getDependencyPins()
	{
		return _dbDependencyPin.findByObjectPin2CasePin(this);
	}


	/**
	 *  Method:      findByObjectPin(_dbObjectPin _objectPin)
	 *  Description: 
	 *  Returns:     ArrayList<ObjectPin2CasePin>
	 */
	public static ArrayList findByObjectPin(_dbObjectPin _objectPin)
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.findByObjectPin");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT objectPin_id, casePin_id, object2Case_id, id FROM ObjectPin2CasePin WHERE objectPin_id='"+toSQL(((_objectPin==null)?"":_objectPin.getId()))+"'");
				while(s.next())
				{
					ObjectPin2CasePin newObject = new ObjectPin2CasePin();
					newObject.objectPin_id=s.getString(1);
					newObject.casePin_id=s.getString(2);
					newObject.object2Case_id=s.getString(3);
					newObject.id=s.getString(4);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 *  Method:      findByCasePin(_dbCasePin _casePin)
	 *  Description: 
	 *  Returns:     ArrayList<ObjectPin2CasePin>
	 */
	public static ArrayList findByCasePin(_dbCasePin _casePin)
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.findByCasePin");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT objectPin_id, casePin_id, object2Case_id, id FROM ObjectPin2CasePin WHERE casePin_id='"+toSQL(((_casePin==null)?"":_casePin.getId()))+"'");
				while(s.next())
				{
					ObjectPin2CasePin newObject = new ObjectPin2CasePin();
					newObject.objectPin_id=s.getString(1);
					newObject.casePin_id=s.getString(2);
					newObject.object2Case_id=s.getString(3);
					newObject.id=s.getString(4);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 *  Method:      findByObject2Case(_dbObject2Case _object2Case)
	 *  Description: 
	 *  Returns:     ArrayList<ObjectPin2CasePin>
	 */
	public static ArrayList findByObject2Case(_dbObject2Case _object2Case)
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.findByObject2Case");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT objectPin_id, casePin_id, object2Case_id, id FROM ObjectPin2CasePin WHERE object2Case_id='"+toSQL(((_object2Case==null)?"":_object2Case.getId()))+"'");
				while(s.next())
				{
					ObjectPin2CasePin newObject = new ObjectPin2CasePin();
					newObject.objectPin_id=s.getString(1);
					newObject.casePin_id=s.getString(2);
					newObject.object2Case_id=s.getString(3);
					newObject.id=s.getString(4);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 *  Method:      findById(String _id)
	 *  Description: 
	 *  Returns:     ObjectPin2CasePin
	 */
	public static ObjectPin2CasePin findById(String _id)
	{
		ObjectPin2CasePin result = null;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.findById");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT objectPin_id, casePin_id, object2Case_id, id FROM ObjectPin2CasePin WHERE id='"+toSQL(_id)+"'");
				if(s.next())
				{
					result = new ObjectPin2CasePin();
					result.objectPin_id= s.getString(1);
					result.casePin_id= s.getString(2);
					result.object2Case_id= s.getString(3);
					result.id= s.getString(4);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}

	/**
	 * returns boolean
	 */
	public boolean commit()
	{
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.commit");
			try
			{
				stmt.executeUpdate( "UPDATE ObjectPin2CasePin set objectPin_id= '"+toSQL(objectPin_id)+"', casePin_id= '"+toSQL(casePin_id)+"', object2Case_id= '"+toSQL(object2Case_id)+"' WHERE id='"+id+"'");
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return true;
	}


	/**
	 * returns ArrayList<ObjectPin2CasePin>
	 */
	public static ArrayList getAll()
	{
		ArrayList result = new ArrayList();
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.getAll");
			try
			{
				ResultSet s = stmt.executeQuery( "SELECT objectPin_id, casePin_id, object2Case_id, id FROM ObjectPin2CasePin");
				while(s.next())
				{
					ObjectPin2CasePin newObject = new ObjectPin2CasePin();
					newObject.objectPin_id=s.getString(1);
					newObject.casePin_id=s.getString(2);
					newObject.object2Case_id=s.getString(3);
					newObject.id=s.getString(4);
					result.add(newObject);
				}
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 * create a new object in the database
	 */
	static public ObjectPin2CasePin createInstance( _dbObjectPin _objectPin, _dbCasePin _casePin, _dbObject2Case _object2Case )
	{
		ObjectPin2CasePin result = null;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.createInstance");
			try
			{
				String nextGUID = new java.rmi.server.UID().toString();
				stmt.executeUpdate( "INSERT INTO ObjectPin2CasePin ( objectPin_id, casePin_id, object2Case_id, id) VALUES ( '"+((_objectPin==null)?"":_objectPin.getId())+"',  '"+((_casePin==null)?"":_casePin.getId())+"',  '"+((_object2Case==null)?"":_object2Case.getId())+"', '"+nextGUID+"')");
				result = new ObjectPin2CasePin();
				result.objectPin_id= (_objectPin==null)?"":_objectPin.getId();
				result.casePin_id= (_casePin==null)?"":_casePin.getId();
				result.object2Case_id= (_object2Case==null)?"":_object2Case.getId();
				result.id= nextGUID;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 * create a new object in the database
	 */
	static public void newInstance( _dbObjectPin _objectPin, _dbCasePin _casePin, _dbObject2Case _object2Case )
	{
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.newInstance");
			try
			{
				String nextGUID = new java.rmi.server.UID().toString();
				stmt.executeUpdate( "INSERT INTO ObjectPin2CasePin ( objectPin_id, casePin_id, object2Case_id, id) VALUES ( '"+((_objectPin==null)?"":_objectPin.getId())+"',  '"+((_casePin==null)?"":_casePin.getId())+"',  '"+((_object2Case==null)?"":_object2Case.getId())+"', '"+nextGUID+"')");
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
	}


	/**
	 * destroy a object in the database
	 */
	static public boolean destroyInstance( String  _key)
	{
		boolean result = false;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.destroyInstance");
			try
			{
					stmt.executeUpdate( "DELETE FROM ObjectPin2CasePin WHERE id='"+_key+"'");
					result = true;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 * destroy ALL objects in the database
	 */
	static public boolean destroyAll()
	{
		boolean result = false;
		SaveStatement  stmt;

		try
		{
			stmt  = ConnectionManager.getValid().createStatement("_dbObjectPin2CasePin.destroyAll");
			try
			{
					stmt.executeUpdate("DELETE from ObjectPin2CasePin" );
					result = true;
			}
			catch(Exception exc)
			{
				Trace.error(exc);
			}
			stmt.close();
		
		}
		catch (Exception ex)
		{
			Trace.error(ex);
		}
		return result;
	}


	/**
	 */
	public String toString()
	{
		StringBuffer result = new StringBuffer(1024);
		result.append(objectPin_id);
		result.append("|");
		result.append(casePin_id);
		result.append("|");
		result.append(object2Case_id);
		result.append("|");
		result.append(id);
		return result.toString();
	}


	/**
	 * init the class
	 */
	static
	{
	}


}
