/* NO WARRANTY
 *
 *    BECAUSE THE PROGRAM IS IN THE PUBLIC DOMAIN, THERE IS NO
 *    WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
 *    LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE AUTHORS
 *    AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
 *    WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
 *    BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 *    AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO
 *    THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD
 *    THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL
 *    NECESSARY SERVICING, REPAIR OR CORRECTION.
 *
 *    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
 *    WRITING WILL ANY AUTHOR, OR ANY OTHER PARTY WHO MAY MODIFY
 *    AND/OR REDISTRIBUTE THE PROGRAM, BE LIABLE TO YOU FOR DAMAGES,
 *    INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
 *    DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM
 *    (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
 *    RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES
 *    OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
 *    PROGRAMS), EVEN IF SUCH AUTHOR OR OTHER PARTY HAS BEEN ADVISED
 *    OF THE POSSIBILITY OF SUCH DAMAGES.
 */

#ifndef _PNGImageDC_
#define _PNGImageDC_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

class PNGImageDC : public CDC  
{
public:
	PNGImageDC();
	virtual ~PNGImageDC();

	BOOL Create(CSize &pImageSize);

	BOOL Save(CString &pFileName,
		BOOL pInterlaced = TRUE,
		BOOL pTransparent = FALSE,
		COLORREF pTransparentColor = RGB(255,255,255));

	BOOL Stream(CMemFile * pMemFile,
		BOOL pInterlaced = TRUE,
		BOOL pTransparent = FALSE,
		COLORREF pTransparentColor = RGB(255,255,255));

	BOOL BaseSave(CFile &pFile,
		BOOL pInterlaced = TRUE,
		BOOL pTransparent = FALSE,
		COLORREF pTransparentColor = RGB(255,255,255));

	void Erase(COLORREF pColor);
	CSize cImageSize;
	CBitmap cBitmap;
	CBitmap * cOldBitmap;
};

#endif
